# Properties file which configures the operation of the JDK
# logging facility.

# If this property is not specified, then the config file is
# retrieved from its default location at:
#
# JDK_HOME/jre/lib/logging.properties

# Global logging properties.
# ------------------------------------------
# The set of handlers to be loaded upon startup.
# Comma-separated list of class names.
# (? LogManager docs say no comma here, but JDK example has comma.)
handlers=java.util.logging.FileHandler, \
         pl.agh.jtp.lab06_home.application.logging.SevereLevelLogsFileHandler,  \
         pl.agh.jtp.lab06_home.application.logging.CommandUsageFileHandler,  \
         java.util.logging.ConsoleHandler

# Default global logging level.
# Loggers and Handlers may override this level
.level=INFO

# Loggers
# ------------------------------------------
# Here, the level for each package is specified.
# The global level is used by default, so levels
# specified here simply act as an override.
pl.agh.jtp.lab06_home.encryption=SEVERE

# Handlers
# -----------------------------------------

# --- ConsoleHandler ---
# Console logging is DISABLED now
java.util.logging.ConsoleHandler.level=OFF
java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter

# --- CommandUsageFileHandler ---
# Override of global logging level
pl.agh.jtp.lab06_home.application.logging.CommandUsageFileHandler.level=ALL
# Logs file destination
pl.agh.jtp.lab06_home.application.logging.CommandUsageFileHandler.pattern=%h/logs/command-usage.log
# Limiting size of output file in bytes:
pl.agh.jtp.lab06_home.application.logging.CommandUsageFileHandler.limit=50000
# Number of output files to cycle through, by appending an integer to the base file name:
pl.agh.jtp.lab06_home.application.logging.CommandUsageFileHandler.count=2
# Style of output (Simple or XML):
pl.agh.jtp.lab06_home.application.logging.CommandUsageFileHandler.formatter=java.util.logging.SimpleFormatter
# Filter
pl.agh.jtp.lab06_home.application.logging.CommandUsageFileHandler.filter=pl.agh.jtp.lab06_home.application.logging.CommandUsageFilter

# --- FileHandler ---
# Override of global logging level
java.util.logging.FileHandler.level=ALL
# Logs file destination
java.util.logging.FileHandler.pattern=%h/logs/application.log
# Limiting size of output file in bytes:
java.util.logging.FileHandler.limit=50000
# Number of output files to cycle through, by appending an integer to the base file name:
java.util.logging.FileHandler.count=2
# Style of output (Simple or XML):
java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter

# --- SevereFileHandler ---
# Override of global logging level
pl.agh.jtp.lab06_home.application.logging.SevereLevelLogsFileHandler.level=SEVERE
# Logs file destination
pl.agh.jtp.lab06_home.application.logging.SevereLevelLogsFileHandler.pattern=%h/logs/error.log

# Limiting size of output file in bytes:
pl.agh.jtp.lab06_home.application.logging.SevereLevelLogsFileHandler.limit=50000

# Number of output files to cycle through, by appending an integer to the base file name:
pl.agh.jtp.lab06_home.application.logging.SevereLevelLogsFileHandler.count=2

# Style of output (Simple or XML):
pl.agh.jtp.lab06_home.application.logging.SevereLevelLogsFileHandler.formatter=java.util.logging.SimpleFormatter


# Help to set custom directory for logs files:
#
# "/" the local pathname separator
# "%t" the system temporary directory
# "%h" the value of the "user.home" system property
# "%g" the generation number to distinguish rotated logs
# "%u" a unique number to resolve conflicts
# "%%" translates to a single percent sign "%"